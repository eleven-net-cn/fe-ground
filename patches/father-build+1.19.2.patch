diff --git a/node_modules/father-build/lib/babel.js b/node_modules/father-build/lib/babel.js
index 52ef747..c5d08ad 100644
--- a/node_modules/father-build/lib/babel.js
+++ b/node_modules/father-build/lib/babel.js
@@ -195,7 +195,7 @@ function _ref() {
     }
 
     return new Promise(resolve => {
-      const patterns = [(0, _path.join)(srcPath, "**/*"), `!${(0, _path.join)(srcPath, "**/fixtures{,/**}")}`, `!${(0, _path.join)(srcPath, "**/demos{,/**}")}`, `!${(0, _path.join)(srcPath, "**/__test__{,/**}")}`, `!${(0, _path.join)(srcPath, "**/*.mdx")}`, `!${(0, _path.join)(srcPath, "**/*.md")}`, `!${(0, _path.join)(srcPath, "**/*.+(test|e2e|spec).+(js|jsx|ts|tsx)")}`];
+      const patterns = [(0, _path.join)(srcPath, "**/*"), `!${(0, _path.join)(srcPath, "**/fixtures{,/**}")}`, `!${(0, _path.join)(srcPath, "**/demos{,/**}")}`, `!${(0, _path.join)(srcPath, "**/__test__{,/**}")}`, `!${(0, _path.join)(srcPath, "**/__tests__{,/**}")}`, `!${(0, _path.join)(srcPath, "**/*.mdx")}`, `!${(0, _path.join)(srcPath, "**/*.md")}`, `!${(0, _path.join)(srcPath, "**/*.+(test|e2e|spec).+(js|jsx|ts|tsx)")}`];
       createStream(patterns).on("end", () => {
         if (watch) {
           log(_chalk.default.magenta(`Start watching ${(0, _slash.default)(srcPath).replace(`${cwd}/`, "")} directory...`));
diff --git a/node_modules/father-build/lib/build.js b/node_modules/father-build/lib/build.js
index 7e597c1..0da1315 100644
--- a/node_modules/father-build/lib/build.js
+++ b/node_modules/father-build/lib/build.js
@@ -98,9 +98,11 @@ function validateBundleOpts(bundleOpts, {
 }) {
   if (bundleOpts.runtimeHelpers) {
     const pkgPath = (0, _path.join)(cwd, 'package.json');
-    assert.ok((0, _fs.existsSync)(pkgPath), `@babel/runtime dependency is required to use runtimeHelpers`);
+    // assert.ok((0, _fs.existsSync)(pkgPath), `@babel/runtime dependency is required to use runtimeHelpers`);
+    assert.ok((0, _fs.existsSync)(pkgPath), `@babel/runtime-corejs3 dependency is required to use runtimeHelpers`);
     const pkg = JSON.parse((0, _fs.readFileSync)(pkgPath, 'utf-8'));
-    assert.ok((pkg.dependencies || {})['@babel/runtime'], `@babel/runtime dependency is required to use runtimeHelpers`);
+    // assert.ok((pkg.dependencies || {})['@babel/runtime'], `@babel/runtime dependency is required to use runtimeHelpers`);
+    assert.ok((pkg.dependencies || {})['@babel/runtime-corejs3'], `@babel/runtime-corejs3 dependency is required to use runtimeHelpers`);
   }
 
   if (bundleOpts.cjs && bundleOpts.cjs.lazy && bundleOpts.cjs.type === 'rollup') {
diff --git a/node_modules/father-build/lib/getBabelConfig.js b/node_modules/father-build/lib/getBabelConfig.js
index d9ec6f8..e677c30 100644
--- a/node_modules/father-build/lib/getBabelConfig.js
+++ b/node_modules/father-build/lib/getBabelConfig.js
@@ -67,7 +67,11 @@ function _default(opts) {
         loose: true
       }], ...(runtimeHelpers ? [[require.resolve('@babel/plugin-transform-runtime'), {
         useESModules: isBrowser && type === 'esm',
-        version: require('@babel/runtime/package.json').version
+        version: require('@babel/runtime-corejs3/package.json').version,
+        corejs: {
+          version: 3,
+          proposals: true,
+        },
       }]] : []), ...(process.env.COVERAGE ? [require.resolve('babel-plugin-istanbul')] : [])]
     },
     isBrowser
diff --git a/node_modules/father-build/lib/getRollupConfig.js b/node_modules/father-build/lib/getRollupConfig.js
index dc0571d..d280451 100644
--- a/node_modules/father-build/lib/getRollupConfig.js
+++ b/node_modules/father-build/lib/getRollupConfig.js
@@ -102,7 +102,8 @@ function _default(opts) {
   } catch (e) {} // cjs 不给浏览器用，所以无需 runtimeHelpers
 
 
-  const runtimeHelpers = type === 'cjs' ? false : runtimeHelpersOpts;
+  // const runtimeHelpers = type === 'cjs' ? false : runtimeHelpersOpts;
+  const runtimeHelpers = runtimeHelpersOpts;
 
   const babelOpts = _objectSpread({}, (0, _getBabelConfig.default)({
     type,
